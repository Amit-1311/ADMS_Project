CREATE USER Dumbledore IDENTIFIED BY Phoenix DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;
GRANT CREATE TABLE TO Dumbledore;


_ _ _ _ Create Table For House _ _ _ _


CREATE TABLE House (
  H_Id           NUMBER(10) PRIMARY KEY,
  H_Name         VARCHAR2(100) NOT NULL,
  H_Points       NUMBER(10)
);


_ _ _ _ Create Table For Student _ _ _ _


CREATE TABLE Student (
  S_Id           NUMBER(10) PRIMARY KEY,
  S_Name         VARCHAR2(100),
  S_CGPA         NUMBER(4, 2) CHECK (S_CGPA <= 4.00),
  S_BloodStatus  VARCHAR2(100),
  H_No           NUMBER(10),
  CONSTRAINT fk_House FOREIGN KEY (H_No) REFERENCES House(H_Id)
);


_ _ _ _ Insert Values Into House Table _ _ _ _

INSERT INTO House (H_Id, H_Name, H_Points) VALUES ('11', 'Gryffindor', '892');

INSERT INTO House (H_Id, H_Name, H_Points) VALUES ('22', 'Hufflepuf', '785');

INSERT INTO House (H_Id, H_Name, H_Points) VALUES ('33', 'Ravenclaw', '789');

INSERT INTO House (H_Id, H_Name, H_Points) VALUES ('44', 'Slytherin', '850');


_ _ _ _ Insert Values Into Student Table _ _ _ _

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('2', 'Harry', '3.45', 'Halfblood', '11');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('7', 'Ron', '3.01', 'Pureblood', '11');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('12', 'Hannah', NULL, 'Pureblood', '22');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('17', 'Cedric', '3.78', 'Pureblood', '22');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('22', 'Cho', '3.55', 'Muggleborn', '33');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('27', 'Luna', '2.89', NULL, '33');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('32', 'Draco', '3.88', 'Pureblood', '44');

INSERT INTO Student (S_Id, S_Name, S_CGPA, S_BloodStatus, H_No) VALUES ('37', 'Goyle', '2.10', 'Pureblood', '44');




_ _ _ _ Using ARITHMETIC Operator _ _ _ _

SELECT S_ID, S_Name, S_CGPA + 0.01 As New_CGPA
FROM Student;


_ _ _ _ Using CONCATENATION Operator _ _ _ _

SELECT S_ID, S_Name || '.' || S_CGPA As New_CGPA
FROM Student;


_ _ _ _ Using COLUMN ALIAS _ _ _ _

SELECT S_ID As Student_ID, S_Name As Student_Name, S_CGPA As Student_CGPA
FROM Student;


_ _ _ _ Using LIKE Operator _ _ _ _

SELECT S_Name
FROM Student
WHERE S_Name LIKE 'C%';


_ _ _ _ Using IS NULL Operator _ _ _ _

SELECT S_ID, S_Name, S_CGPA
FROM Student
WHERE S_CGPA IS NULL;


_ _ _ _ Using ORDER BY Clause _ _ _ _

SELECT S_ID, S_Name, S_CGPA
FROM Student
ORDER BY S_CGPA desc;


_ _ _ _ Using SUBSTAR Function _ _ _ _

SELECT SUBSTR(S_Name, 1, 3) As First_Three_Characters 
FROM Student;


_ _ _ _ Using NVL Function _ _ _ _

SELECT S_ID, S_Name, NVL(S_BloodStatus, 'Unknown') As Student_Blood_Status
FROM Student;


_ _ _ _ Using MAX Function _ _ _ _

SELECT MAX(S_CGPA) As Highest_CGPA
FROM Student;


_ _ _ _ Using SUM Function _ _ _ _

SELECT SUM(S_CGPA) As Total_CGPA_Of_All_Students
FROM Student;


_ _ _ _ Using GROUP BY Clause _ _ _ _

SELECT H_Name, COUNT(*) As Number_Of_Students
FROM Student
JOIN House ON Student.H_No = House.H_Id
GROUP BY H_Name;


_ _ _ _ Using HAVING Clause _ _ _ _

SELECT H_Name, COUNT(*) As Number_Of_Students
FROM Student
JOIN House ON Student.H_No = House.H_Id
GROUP BY H_Name
HAVING COUNT(*) > 1;